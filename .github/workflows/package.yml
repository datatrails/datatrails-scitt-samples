# This workflow tests that the installed package and its scripts work as expectedca
# It is a pre-requisite for publishing a releasew wheel to PyPI

name: Test Packaging

on:
  pull_request:

env:
  DATATRAILS_CLIENT_SECRET: ${{ secrets.DATATRAILS_CLIENT_SECRET }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12" ]
        # reduced matrix for ci
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Task
      uses: arduino/setup-task@v1
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Install dependencies
      run: |
        # task venv
        python3 -m venv venv 
        source venv/bin/activate
        python3 -m pip install -r requirements.txt
        python3 -m pip install -r requirements-dev.txt

      shell: bash

    - name: Build and test package (registration demo)
      env:
        DATATRAILS_URL: ${{ env.DATATRAILS_URL }}
        DATATRAILS_CLIENT_ID: ${{ env.DATATRAILS_CLIENT_ID }}
        DATATRAILS_CLIENT_SECRET: ${{ secrets.DATATRAILS_CLIENT_SECRET }}

      run: |
        source venv/bin/activate
        python3 -m build --sdist
        python3 -m build --wheel
        twine check dist/*
        pip install --force-reinstall dist/*.whl
        export DATATRAILS_URL
        export DATATRAILS_CLIENT_ID
        export DATATRAILS_CLIENT_SECRET
        task registration-demo
      shell: bash