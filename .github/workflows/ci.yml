# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build and test

on:
  workflow_call:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13" ]
        # reduced matrix for ci
        os: [ubuntu-latest, windows-latest]
      # this limit mitigates against rate limiting making tests flaky
      max-parallel: 2
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install -r requirements-dev.txt
      shell: bash

    - name: Run integrity checks
      run: |
        ruff check datatrails_scitt_samples tests
        python3 -m black datatrails_scitt_samples tests
        python3 -m pyright --stats datatrails_scitt_samples
        modified=$(git status -s | wc -l)
        if [ $modified -gt 0 ]
        then
            echo "there are $modified files that must be reformatted"
            echo "DISABLED guard due to mismatch with local environment"
            # exit 1
        fi
      shell: bash

    - name: Simple tests
      env:
        DATATRAILS_URL: ${{ vars.DATATRAILS_URL }}
        DATATRAILS_CLIENT_ID: ${{ vars.DATATRAILS_CLIENT_ID }}
        DATATRAILS_CLIENT_SECRET: ${{ secrets.DATATRAILS_CLIENT_SECRET }}
      run: |
        python3 -m unittest
      shell: bash

    - uses: pypa/gh-action-pip-audit@v1.0.8
      if: ${{ matrix.os == 'ubuntu-latest' }}
      with:
        # GHSA-wj6h-64fc-37mp - python-ecdsa will not be fixed by maintainers
        ignore-vulns: |
          GHSA-wj6h-64fc-37mp
        inputs: requirements.txt

    - name: Install Task
      uses: arduino/setup-task@v1
      with:
        version: "3.x"
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create and install wheel
      run: |
        python3 -m build --wheel
        python3 -m pip install --force-reinstall dist/*.whl
      shell: bash

    - name: Test installed package (registration-demo)
      env:
        DATATRAILS_URL: ${{ vars.DATATRAILS_URL }}
        DATATRAILS_CLIENT_ID: ${{ vars.DATATRAILS_CLIENT_ID }}
        DATATRAILS_CLIENT_SECRET: ${{ secrets.DATATRAILS_CLIENT_SECRET }}
      run: |
        task registration-demo
      shell: bash
